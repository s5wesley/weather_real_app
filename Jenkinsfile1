pipeline {
    agent {
        label 'Jenkins-static-agent'
    }

    environment {
        DOCKER_HUB_CREDENTIALS = 'docker-cred'
        DB_IMAGE_VERSION = 'latest'
        REDIS_IMAGE_VERSION = 'latest'
        WEATHER_IMAGE_VERSION = 'latest'
        AUTH_IMAGE_VERSION = 'latest'
    }

    stages {
        stage('Build and Push Docker Images') {
            steps {
                script {
                    // Set your Docker Hub credentials
                    withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        // Build and push each service's Docker image
                        sh "docker-compose -f docker-compose.yml build --build-arg DB_IMAGE_VERSION=${DB_IMAGE_VERSION} --build-arg REDIS_IMAGE_VERSION=${REDIS_IMAGE_VERSION} --build-arg WEATHER_IMAGE_VERSION=${WEATHER_IMAGE_VERSION} --build-arg AUTH_IMAGE_VERSION=${AUTH_IMAGE_VERSION}"
                        sh 'docker-compose -f docker-compose.yml push'
                    }
                }
            }
        }

        stage('Deploy Weather App') {
            steps {
                script {
                    // Deploy the services using the updated images
                    sh 'docker-compose -f docker-compose.yml up -d'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'

            // Notify your team or trigger additional actions on success
        }
        failure {
            echo 'Pipeline failed!'

            // Notify your team or trigger rollback actions on failure
        }
    }
}
